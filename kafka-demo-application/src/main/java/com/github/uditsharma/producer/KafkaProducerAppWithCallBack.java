package com.github.uditsharma.producer;

import org.apache.kafka.clients.producer.*;
import org.apache.kafka.common.serialization.StringSerializer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Properties;

public class KafkaProducerAppWithCallBack {

    public static void main(String[] args) {
        final Logger logger = LoggerFactory.getLogger(KafkaProducerAppWithCallBack.class);
        String bootstrapServer="127.0.0.1:9092";
        Properties properties = new Properties();
        properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,bootstrapServer);
        properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());
        properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG,StringSerializer.class.getName());
        KafkaProducer kafkaProducer = new KafkaProducer(properties);

        for(int i=0;i<10;i++){
            ProducerRecord producerRecord = new ProducerRecord("udit-second-topic","This is generated by java program :"+i);
            kafkaProducer.send(producerRecord, new Callback() {
                public void onCompletion(RecordMetadata recordMetadata, Exception e) {
                    if(e == null){
                        logger.info("Record has been send to topic "+ recordMetadata.topic()+
                                " Partition "+recordMetadata.partition() +
                                " At time "+ recordMetadata.timestamp());
                    }
                    else{
                        logger.error("Error occured while sending the msg ",e.getMessage());
                    }
                }
            });
        }
        kafkaProducer.flush();
        kafkaProducer.close();
    }
}
